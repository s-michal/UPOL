(define mlist
  (lambda args
    (if (null? args)
        '()
        (mcons (car args) (apply mlist (cdr args))))))
  

(define f-list
  (lambda (n)
    (build-list n
                (lambda (i)
                  (build-list (- n i)
                              (lambda (x) #f))))))

(define s (apply mlist (f-list 4)))
s


(define list-set!
  (lambda (l index value)
    (let iter ((l (apply mlist l))
               (i index))
      (if (= i index)
          (set-mcar! l value)
          (iter (mcdr l) (- i 1)))
      l)))

(list-set! '(1 2 3 4 5) 2 5)